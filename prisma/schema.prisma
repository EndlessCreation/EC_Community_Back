generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  year     Int?
  name     String?
  email    String   @unique
  isActive Boolean? @map("is_active")
  image    String?

  userProject UserProject[]
  UserSkill   UserSkill[]
  UserRole    UserRole[]

  @@map("user")
}

model Skill {
  id   Int    @id @default(autoincrement())
  name String

  UserSkill UserSkill[]

  @@map("skill")
}

model Project {
  id          Int             @id @default(autoincrement())
  title       String
  category    ProjectCategory
  status      ProjectCategory
  startDate   DateTime?       @map("start_date")
  endDate     DateTime?       @map("end_date")
  image       String
  source      String
  description String          @db.Text

  UserProject UserProject[]

  @@map("project")
}

model Role {
  id       Int     @id @default(autoincrement())
  name     String
  isAdmin  Boolean @map("is_admin")
  isLeader Boolean @map("is_leader")

  UserRole UserRole[]
  @@map("role")
}

model UserProject {
  userId    Int @map("user_id")
  projectId Int @map("project_id")

  User    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  Project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@id([userId, projectId], name: "user_project_pk")
  @@map("user_project")
}

model UserSkill {
  userId  Int @map("user_id")
  skillId Int @map("skill_id")

  User  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  Skill Skill @relation(fields: [skillId], references: [id], onDelete: Cascade)

  @@id([userId, skillId], name: "user_skill_pk")
  @@map("user_skill")
}

model UserRole {
  userId Int @map("user_id")
  roleId Int @map("role_id")

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)
  Role Role @relation(fields: [roleId], references: [id], onDelete: Cascade)

  @@id([userId, roleId], name: "user_role_pk")
  @@map("user_role")
}

enum ProjectCategory {
  STUDY
  COMPETITION
  ADVANCE
}

enum ProjectStatus {
  RECRUIT
  PROGRESS
  FINISH
}
